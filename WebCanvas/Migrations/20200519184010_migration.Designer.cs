// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCanvas.Models;

namespace WebCanvas.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20200519184010_migration")]
    partial class migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebCanvas.Models.Auth", b =>
                {
                    b.Property<int>("ID_auth")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code");

                    b.Property<int>("ID_user");

                    b.HasKey("ID_auth");

                    b.HasIndex("ID_user");

                    b.ToTable("Authentication");
                });

            modelBuilder.Entity("WebCanvas.Models.Comment", b =>
                {
                    b.Property<int>("ID_comment")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Commentary");

                    b.Property<DateTime>("Date");

                    b.Property<int>("ID_page");

                    b.Property<int>("ID_reply_comment");

                    b.Property<int>("ID_user");

                    b.Property<bool>("isReply");

                    b.HasKey("ID_comment");

                    b.HasIndex("ID_page");

                    b.HasIndex("ID_user");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("WebCanvas.Models.User", b =>
                {
                    b.Property<int>("ID_user")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<int>("ID_role");

                    b.Property<string>("LastName");

                    b.Property<string>("Login");

                    b.Property<string>("Password");

                    b.Property<bool>("isConfirmed");

                    b.HasKey("ID_user");

                    b.HasIndex("ID_role");

                    b.ToTable("Users");

                    b.HasData(
                        new { ID_user = 1, Email = "dmytro.bohdanov@nure.ua", FirstName = "Богдан", ID_role = 3, LastName = "Димов", Login = "admin", Password = "adminp", isConfirmed = true },
                        new { ID_user = 3, Email = "dmytro.bohdanov@nure.ua", FirstName = "Bogdan", ID_role = 2, LastName = "Dimoff", Login = "editor", Password = "editorp", isConfirmed = true },
                        new { ID_user = 2, Email = "dmytro.bohdanov@nure.ua", FirstName = "Дима", ID_role = 1, LastName = "Богданов", Login = "user", Password = "userp", isConfirmed = true }
                    );
                });

            modelBuilder.Entity("WebCanvas.Models.UserFile", b =>
                {
                    b.Property<int>("ID_file")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Avatar");

                    b.Property<int>("ID_user");

                    b.HasKey("ID_file");

                    b.HasIndex("ID_user")
                        .IsUnique();

                    b.ToTable("Files");
                });

            modelBuilder.Entity("WebCanvas.Models.UserRole", b =>
                {
                    b.Property<int>("ID_role")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int>("Role");

                    b.HasKey("ID_role");

                    b.ToTable("Roles");

                    b.HasData(
                        new { ID_role = 3, Name = "ADMIN", Role = 2 },
                        new { ID_role = 2, Name = "EDITOR", Role = 1 },
                        new { ID_role = 1, Name = "USER", Role = 0 }
                    );
                });

            modelBuilder.Entity("WebCanvas.Models.WebPage", b =>
                {
                    b.Property<int>("ID_page")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("pageName");

                    b.HasKey("ID_page");

                    b.ToTable("Pages");

                    b.HasData(
                        new { ID_page = 1, pageName = "Базовое использование" },
                        new { ID_page = 2, pageName = "Рисование фигур с помощью canvas" },
                        new { ID_page = 3, pageName = "Стили и цвета" },
                        new { ID_page = 4, pageName = "Атрибуты" },
                        new { ID_page = 5, pageName = "События" },
                        new { ID_page = 6, pageName = "Комментарии" },
                        new { ID_page = 7, pageName = "Главная" },
                        new { ID_page = 8, pageName = "Вход" },
                        new { ID_page = 9, pageName = "Регистрация" },
                        new { ID_page = 10, pageName = "Профиль" },
                        new { ID_page = 11, pageName = "Редактирование" },
                        new { ID_page = 12, pageName = "Создать" },
                        new { ID_page = 13, pageName = "Пользователи" }
                    );
                });

            modelBuilder.Entity("WebCanvas.Models.Auth", b =>
                {
                    b.HasOne("WebCanvas.Models.User", "user")
                        .WithMany()
                        .HasForeignKey("ID_user")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCanvas.Models.Comment", b =>
                {
                    b.HasOne("WebCanvas.Models.WebPage", "Page")
                        .WithMany("comments")
                        .HasForeignKey("ID_page")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebCanvas.Models.User", "User")
                        .WithMany("comments")
                        .HasForeignKey("ID_user")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCanvas.Models.User", b =>
                {
                    b.HasOne("WebCanvas.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("ID_role")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebCanvas.Models.UserFile", b =>
                {
                    b.HasOne("WebCanvas.Models.User")
                        .WithOne("File")
                        .HasForeignKey("WebCanvas.Models.UserFile", "ID_user")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
